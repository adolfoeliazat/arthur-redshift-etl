Description: >
    Create a Redshift cluster with its subnet group and parameter group.

AWSTemplateFormatVersion: '2010-09-09'


Parameters:

    VpcStackName:
        Description: (required) Name of cloudformation stack with VPC
        Type: String

    MasterUsername:
        Description: (required) User name for the primary user
        Type: String
        AllowedPattern: "([a-z])([a-z]|[0-9])*"

    MasterUserPassword:
        Description: (required) Password for the primary user (with lowercase, uppercase, numbers etc.)
        Type: String
        NoEcho: true

    NodeType:
        Description: (optional) The type of node to be provisioned
        Type: String
        Default: dc1.large
        AllowedValues:
            - dc1.large
            - dc1.8xlarge
            - ds2.xlarge
            - ds2.8xlarge

    NumberOfNodes:
        Description: (optional) The number of compute nodes in the cluster
        Type: Number
        Default: 2

    SnapshotIdentifier:
        Description: (optional) The identifier of an existing snapshot (leave empty to skip)
        Type: String
        Default: ""


Conditions:

    IsSingleNodeCluster:
        !Equals [ !Ref "NumberOfNodes", 1 ]

    HasSnapshotIdentifier:
        !Not [ !Equals [ !Ref "SnapshotIdentifier", "" ] ]


Resources:

    RedshiftClusterSubnetGroup:
        Type: "AWS::Redshift::ClusterSubnetGroup"
        Properties:
            Description: "Must cross-reference public subnet id from VPC stack"
            SubnetIds:
                - Fn::ImportValue: !Sub "${VpcStackName}::public-subnet-id"

    RedshiftClusterParameterGroup:
        Type: "AWS::Redshift::ClusterParameterGroup"
        Properties:
            Description: "Require SSL for connections"
            ParameterGroupFamily: "redshift-1.0"
            Parameters:
                - ParameterName: "require_ssl"
                  ParameterValue: "true"

    RedshiftEIP:
        Type: "AWS::EC2::EIP"
        Properties:
            Domain: vpc

    RedshiftCluster:
        Type: "AWS::Redshift::Cluster"
        Properties:
            AutomatedSnapshotRetentionPeriod:
                30
            AvailabilityZone:
                Fn::ImportValue: !Sub "${VpcStackName}::vpc-az"
            ClusterParameterGroupName:
                !Ref RedshiftClusterParameterGroup
            ClusterSubnetGroupName:
                !Ref RedshiftClusterSubnetGroup
            DBName:
                "dev"
            ElasticIp:
                !Ref RedshiftEIP
            Encrypted:
                true
            IamRoles:
                - Fn::ImportValue: !Sub "${VpcStackName}::redshift-iam-role"
            MasterUsername:
                !Ref MasterUsername
            MasterUserPassword:
                !Ref MasterUserPassword
            NodeType:
                !Ref NodeType
            ClusterType:
                !If [ "IsSingleNodeCluster", "single-node", "multi-node" ]
            NumberOfNodes:
                !If [ "IsSingleNodeCluster", !Ref "AWS::NoValue", !Ref NumberOfNodes ]
            PubliclyAccessible:
                true
            PreferredMaintenanceWindow:
                "mon:14:10-mon:14:40"
            VpcSecurityGroupIds:
                - Fn::ImportValue: !Sub "${VpcStackName}::redshift-public-sg"
            SnapshotIdentifier:
                !If [ "HasSnapshotIdentifier", !Ref "SnapshotIdentifier", !Ref "AWS::NoValue" ]

    # Note that an option to set enhanced VPC routing is missing in cloudformation, so this must be done using the CLI
    # aws redshift modify-cluster --cluster-identifier dw-cluster-dev-redshiftcluster-[your ident] --enhanced-vpc-routing


Outputs:

    RedshiftClusterEndpoint:
        Description: Cluster endpoint
        Value: !Sub "${RedshiftCluster.Endpoint.Address}:${RedshiftCluster.Endpoint.Port}"

    RedshiftClusterName:
        Description: Name of Redshift cluster
        Value: !Ref RedshiftCluster
        Export:
            Name: !Sub "${AWS::StackName}::cluster-id"
