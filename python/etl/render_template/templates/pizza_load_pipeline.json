{
    "objects": [
        {
            "id": "Default",
            "name": "Default",
            "schedule": { "ref": "ETLSchedule" },
            "scheduleType": "cron",
            "failureAndRerunMode": "CASCADE",
            "resourceRole": "DataPipelineDefaultResourceRole",
            "role": "DataPipelineDefaultRole",
            "pipelineLogUri": "s3://#{myS3Bucket}/#{myEtlEnvironment}/logs/",
            "region": "us-east-1",
            "maximumRetries": "2"
        },
        {
            "id": "ETLSchedule",
            "name": "Run once on demand",
            "type": "Schedule",
            "period": "1 days",
            "startDateTime": "#{myStartDateTime}",
            "occurrences": "1"
        },
        {
            "id": "SNSParent",
            "topicArn": "arn:aws:sns:us-east-1:${resources.VPC.account}:etl-status-#{myEtlEnvironment}"
        },
        {
            "id": "SuccessNotification",
            "type": "SnsAlarm",
            "parent": {"ref": "SNSParent"},
            "subject": "ETL Rebuild Success: #{myEtlEnvironment} at #{node.@scheduledStartTime}",
            "message": "Completed last action successfully at #{node.@actualEndTime}\\nLast node: #{node.name}\\nPipelineId: #{node.@pipelineId}\\nLog directory: #{node.pipelineLogUri}#{node.@pipelineId}"
        },
        {
            "id": "FailureNotification",
            "type": "SnsAlarm",
            "parent": {"ref": "SNSParent"},
            "subject": "ETL Rebuild Failure: #{myEtlEnvironment} at #{node.@scheduledStartTime}",
            "message": "Failed step #{node.name} at #{node.@actualEndTime}\\nPipelineId: #{node.@pipelineId}\\nSphere: #{node.@sphere}\\nCancellation reason: #{node.cancellationReason}\\nLog directory: #{node.pipelineLogUri}#{node.@pipelineId}\\n\\nError stacktrace: #{node.errorStackTrace}"
        },
        {
            "id": "PagerNotification",
            "type": "SnsAlarm",
            "topicArn": "arn:aws:sns:us-east-1:${resources.VPC.account}:etl-page-#{myEtlEnvironment}",
            "subject": "ETL Rebuild Failure: #{myEtlEnvironment} at #{node.@scheduledStartTime}",
            "message": "Failed step #{node.name} at #{node.@actualEndTime}\\nPipelineId: #{node.@pipelineId}\\nSphere: #{node.@sphere}\\nCancellation reason: #{node.cancellationReason}\\nLog directory: #{node.pipelineLogUri}#{node.@pipelineId}\\n\\nError stacktrace: #{node.errorStackTrace}"
        },
        {
            "id": "ResourceParent",
            "keyPair": "${resources.key_name}",
            "subnetId": "${resources.VPC.public_subnet}",
            "terminateAfter": "6 Hours"
        },
        {
            "id": "ArthurDriverEC2Resource",
            "type": "Ec2Resource",
            "parent": { "ref": "ResourceParent" },
            "actionOnTaskFailure": "terminate",
            "actionOnResourceFailure": "retryAll",
            "instanceType": "${resources.EC2.instance_type}",
            "imageId": "${resources.EC2.image_type}",
            "securityGroupIds": [
                "${resources.EC2.public_security_group}",
                "${resources.VPC.whitelist_security_group}"
            ],
            "associatePublicIpAddress": "true"
        },
        {
            "id": "Ec2CommandGrandParent",
            "runsOn": {"ref": "ArthurDriverEC2Resource"}
        },
        {
            "id": "ShellCommandParent",
            "parent": {"ref": "Ec2CommandGrandParent"}
        },
        {
            "id": "ArthurCommandParent",
            "parent": {"ref": "Ec2CommandGrandParent"},
            "maximumRetries": "0"
        },
        {
            "id": "CopyBootstrap",
            "name": "Copy Bootstrap (EC2)",
            "type": "ShellCommandActivity",
            "parent": { "ref": "ShellCommandParent" },
            "command": "(sudo yum -y update aws-cli) && /usr/bin/aws s3 cp s3://#{myS3Bucket}/#{myEtlEnvironment}/bin/bootstrap.sh /tmp/bootstrap.sh"
        },
        {
            "id": "Bootstrap",
            "name": "Bootstrap (EC2)",
            "type": "ShellCommandActivity",
            "parent": { "ref": "ShellCommandParent" },
            "command": "bash /tmp/bootstrap.sh #{myS3Bucket} #{myEtlEnvironment}",
            "dependsOn": { "ref": "CopyBootstrap" }
        },
        {
            "id": "ArthurLoad",
            "name": "Arthur Load (EC2)",
            "type": "ShellCommandActivity",
            "parent": { "ref": "ArthurCommandParent" },
            "command": "/tmp/redshift_etl/venv/bin/arthur.py --config /tmp/redshift_etl/config/ load --prolix --prefix #{myEtlEnvironment}  --max-concurrency #{myMaxConcurrency} --wlm-query-slots #{myWlmQuerySlots}",
            "dependsOn": { "ref": "Bootstrap" }
        },
        {
            "id": "PublishAndBackup",
            "name": "Publish and Backup (EC2)",
            "type": "ShellCommandActivity",
            "parent": {"ref": "ShellCommandParent"},
            "command": "bash /tmp/redshift_etl/bin/sync_env.sh -y #{myS3Bucket} #{myEtlEnvironment} #{myEtlEnvironment}/current",
            "dependsOn": { "ref": "ArthurLoad" }
        },
        {
            "id": "ArthurUnload",
            "name": "Arthur Unload (EC2)",
            "type": "ShellCommandActivity",
            "parent": {"ref": "ArthurCommandParent"},
            "command": "/tmp/redshift_etl/venv/bin/arthur.py --config /tmp/redshift_etl/config/ unload --prolix --keep-going --prefix #{myEtlEnvironment}",
            "dependsOn": {"ref": "ArthurLoad"}
        },
        {
            "id": "PingCronutAfterEtl",
            "name": "Ping Cronut After ETL (EC2)",
            "type": "ShellCommandActivity",
            "parent": { "ref":"ShellCommandParent" },
            "command": "bash /tmp/redshift_etl/bin/ping_cronut.sh PING_AFTER_ETL",
            "dependsOn": [
                { "ref": "PublishAndBackup" },
                { "ref": "ArthurUnload" }
            ],
            "onSuccess": { "ref": "SuccessNotification" },
            "onFail": [
                { "ref": "FailureNotification" },
                { "ref": "PagerNotification" }
            ]
        }
    ],
    "parameters": [
        {
            "id": "myS3Bucket",
            "type": "String",
            "optional": "false",
            "description": "Name of S3 bucket",
            "watermark": "data_lake_bucket",
            "helpText": "Pick the name of the data lake."
        },
        {
            "id": "myEtlEnvironment",
            "type": "String",
            "optional": "false",
            "description": "Name of ETL environment",
            "watermark": "production",
            "helpText": "Pick the name such as 'production', 'development' or your user name."
        },
        {
            "id": "myStartDateTime",
            "type": "String",
            "optional": "false",
            "description": "UTC ISO formatted string giving the datetime to start the pipeline",
            "watermark": "2525-01-01T00:00:00",
            "helpText": "When should the pipeline's daily cadence start?"
        }
    ],
    "values": {
        "myS3Bucket": "data_lake_bucket",
        "myEtlEnvironment": "development",
        "myStartDateTime": "2525-01-01T00:00:00",
        "myMaxConcurrency": "4",
        "myWlmQuerySlots": "3"
    }
}