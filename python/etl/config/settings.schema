{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Settings",
    "description": "Schema for settings of data warehouse, upstream sources, and ETL",
    "definitions": {
        "identifier": {
            "description": "Standard identifier (either SQL or AWS)",
            "type": "string",
            "pattern": "^[a-zA-Z_][a-zA-Z0-9_$-]*$",
            "minLength": 1,
            "maxLength": 127
        },
        "identifier_list": {
            "type": "array",
            "items": { "$ref": "#/definitions/identifier" },
            "uniqueItems": true,
            "minItems": 1
        },
        "user_info": {
            "type": "object",
            "properties": {
                "name": { "$ref": "#/definitions/identifier" },
                "group": { "$ref": "#/definitions/identifier" },
                "schema": { "$ref": "#/definitions/identifier" }
            },
            "required": [ "name", "group" ],
            "additionalProperties": false
        },
        "glob_pattern_list": {
            "type": "array",
            "items": {
                "description": "glob pattern to select schema and name",
                "type": "string",
                "pattern": "^[a-zA-Z0-9*?_$-]+.[a-zA-Z0-9*?_$-]+$"
            },
            "uniqueItems": true,
            "minItems": 1
        },
        "path_template" : {
            "description": "'Templates' used in static sources to configure their effective prefix",
            "type": "string",
            "pattern": "^[(\\w+/)|(\\${\\w+})]+$"
        },
        "upstream_database": {
            "type": "object",
            "properties": {
                "name": { "$ref": "#/definitions/identifier" },
                "description": { "type": "string" },
                "read_access": { "$ref": "#/definitions/identifier" },
                "include_tables": { "$ref": "#/definitions/glob_pattern_list" },
                "exclude_tables": { "$ref": "#/definitions/glob_pattern_list" },
                "readers": { "$ref": "#/definitions/identifier_list" },
                "writers": { "$ref": "#/definitions/identifier_list" }
            },
            "required": [ "name", "read_access", "include_tables" ],
            "additionalProperties": false
        },
        "upstream_static": {
            "type": "object",
            "properties": {
                "name": { "$ref": "#/definitions/identifier" },
                "description": { "type": "string" },
                "s3_bucket": { "$ref": "#/definitions/identifier" },
                "s3_path_template": { "$ref": "#/definitions/path_template" },
                "s3_unload_path_template": { "$ref": "#/definitions/path_template" },
                "include_tables": { "$ref": "#/definitions/glob_pattern_list" },
                "readers": { "$ref": "#/definitions/identifier_list" },
                "writers": { "$ref": "#/definitions/identifier_list" }
            },
            "anyOf": [
                { "required": [ "name", "s3_bucket", "s3_path_template"  ] },
                { "required": [ "name", "s3_bucket", "s3_unload_path_template" ] }
            ],
            "dependencies": {
                "include_tables": [ "s3_path_template" ]
            },
            "additionalProperties": false
        },
        "cluster_group": {
            "description": "Either the master or core group for an EMR cluster",
            "type": "object",
            "properties": {
                "instance_type": { "type": "string" },
                "instance_count": {
                    "type": "integer",
                    "minimum": 1
                },
                "managed_security_group": { "type": "string" }
            },
            "required": [ "instance_type", "managed_security_group" ],
            "additionalProperties": false
        },
        "aws_arn": {
            "description": "See http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html",
            "type": "string",
            "pattern": "^arn:aws[^:]*:[^:]+:[^:]*:[0-9a-f]+:"
        }
    },
    "type": "object",
    "properties": {
        "data_warehouse": {
            "type": "object",
            "properties": {
                "admin_access": { "$ref": "#/definitions/identifier" },
                "etl_access": { "$ref": "#/definitions/identifier" },
                "owner": { "$ref": "#/definitions/user_info" },
                "users": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/user_info" },
                    "uniqueItems": true
                },
                "iam_role": { "$ref": "#/definitions/aws_arn" },
                "schemas": {
                    "description": "DEPRECATED use 'transformations' instead",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": { "$ref": "#/definitions/identifier" },
                            "description": { "type": "string" },
                            "groups": { "$ref": "#/definitions/identifier_list" }
                        },
                        "required": [ "name" ],
                        "additionalProperties": false
                    },
                    "uniqueItems": true
                },
                "transformations": {
                    "description": "List of schemas with transformations",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": { "$ref": "#/definitions/identifier" },
                            "description": { "type": "string" },
                            "groups": { "$ref": "#/definitions/identifier_list" }
                        },
                        "required": [ "name" ],
                        "additionalProperties": false
                    },
                    "uniqueItems": true
                },
                "required_for_success": {
                    "description": "List of patterns to identify 'required' relations whose fault will stop the ETL",
                    "oneOf": [
                        { "$ref": "#/definitions/glob_pattern_list" },
                        { "type": "boolean" }
                    ]
                }
            },
            "required": [ "admin_access", "etl_access", "owner" ],
            "additionalProperties": false
        },
        "sources": {
            "type": "array",
            "description": "List of upstream sources (databases or S3)",
            "items": {
                "oneOf": [
                    { "$ref": "#/definitions/upstream_database" },
                    { "$ref": "#/definitions/upstream_static" }
                ]
            },
            "minItems": 1,
            "uniqueItems": true
        },
        "type_maps": {
            "type": "object",
            "properties": {
                "as_is_att_type": {
                    "type": "object",
                    "additionalProperties": { "type": "string" }
                },
                "cast_needed_att_type": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": { "type": "string" },
                        "minItems": 3,
                        "maxItems": 3
                    }
                }
            },
            "required": [ "as_is_att_type", "cast_needed_att_type" ],
            "additionalProperties": false
        },
        "s3": {
            "description": "DEPRECATED use setting in object_store",
            "type": "object",
            "properties": {
                "bucket_name": { "$ref": "#/definitions/identifier" }
            },
            "required": [ "bucket_name" ],
            "additionalProperties": false
        },
        "data_lake": {
            "description": "DEPRECATED use setting in object_store",
            "type": "object",
            "properties": {
                "s3": {
                    "type": "object",
                    "properties": {
                        "bucket_name": { "$ref": "#/definitions/identifier" }
                    },
                    "required": [ "bucket_name" ],
                    "additionalProperties": false
                },
                "iam_role": { "$ref": "#/definitions/aws_arn" }
            },
            "required": [ "s3", "iam_role" ],
            "additionalProperties": false
        },
        "object_store": {
            "description": "Location and attributes for (temporary) storage",
            "type": "object",
            "properties": {
                "s3": {
                    "type": "object",
                    "properties": {
                        "bucket_name": { "$ref": "#/definitions/identifier" }
                    },
                    "required": [ "bucket_name" ],
                    "additionalProperties": false
                },
                "iam_role": { "$ref": "#/definitions/aws_arn" }
            },
            "required": [ "s3", "iam_role" ],
            "additionalProperties": false
        },
        "resources": {
            "type": "object",
            "properties": {
                "key_name": { "type": "string" },
                "VPC": {
                    "type": "object",
                    "properties": {
                        "id": { "type": "string" },
                        "public_subnet": { "type": "string" },
                        "whitelist_security_group": { "type": "string" },
                        "region": { "type": "string" },
                        "account": { "type": "string" }
                    },
                    "required": [ "account", "public_subnet", "whitelist_security_group", "region" ],
                    "additionalProperties": false
                },
                "EC2": {
                    "type": "object",
                    "properties": {
                        "instance_type": { "type": "string" },
                        "image_id": { "type": "string" },
                        "public_security_group": { "type": "string" },
                        "iam_instance_profile": { "type": "string" }
                    },
                    "required": [ "instance_type", "image_id", "public_security_group", "iam_instance_profile" ],
                    "additionalProperties": false
                },
                "EMR": {
                    "type": "object",
                    "properties": {
                        "release_label": { "type": "string" },
                        "master": { "$ref": "#/definitions/cluster_group" },
                        "core": { "$ref": "#/definitions/cluster_group" }
                    },
                    "required": [ "release_label", "master", "core" ],
                    "additionalProperties": false
                },
                "SNS": {
                    "type": "object",
                    "properties": {
                        "success": {
                            "type": "object",
                            "properties": {
                                "topicArn": { "$ref": "#/definitions/aws_arn" }
                            },
                            "additionalProperties": false
                        },
                        "failure": {
                            "type": "object",
                            "properties": {
                                "topicArn": { "$ref": "#/definitions/aws_arn" }
                            },
                            "additionalProperties": false
                        }
                    },
                    "additionalProperties": false
                },
                "RedshiftCluster": {
                    "type": "object",
                    "properties": {
                        "max_concurrency": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "wlm_query_slots": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    "additionalProperties": false
                }
            },
            "required": [ "key_name", "VPC", "EC2", "EMR" ],
            "additionalProperties": false
        },
        "pipelines": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "unique-id": { "$ref": "#/definitions/identifier" },
                    "description": { "type": "string" },
                    "start-time": { "type": "string" },
                    "occurrences": { "type": "integer" },
                    "patterns": { "$ref": "#/definitions/glob_pattern_list" }
                },
                "required": [ "unique-id", "description" ],
                "additionalProperties": false
            },
            "uniqueItems": true
        },
        "etl_events": {
            "type": "object",
            "properties": {
                "dynamodb": {
                    "type": "object",
                    "properties": {
                        "table_prefix": { "type": "string" },
                        "capacity": { "type": "integer" },
                        "region": { "type": "string" }
                    },
                    "required": [ "table_prefix", "capacity", "region" ],
                    "additionalProperties": false
                },
                "postgresql": {
                    "type": "object",
                    "properties": {
                        "table_prefix": { "type": "string" },
                        "write_access": { "type": "string" }
                    },
                    "required": [ "table_prefix", "write_access" ],
                    "additionalProperties": false
                }
            },
            "additionalProperties": false
        },
        "required_in_full_load": {
            "description": "DEPRECATED USE 'required_for_success' instead",
            "$ref": "#/definitions/glob_pattern_list"
        },
        "extract_retries": {
            "description": "If an extract from an upstream source fails due to some transient error, retry the extract at most this many times.",
            "type": "integer",
            "minimum": 1
        }
    },
    "required": [ "data_warehouse", "sources", "type_maps" ],
    "additionalProperties": false
}
